package maincomponent_test

import (
	"testing"

	"github.com/flywingedai/components/example/maincomponent"
	"github.com/flywingedai/components/example/subcomponent/subcomponent_mocks"
)

func initParams() maincomponent.Params {
	return maincomponent.Params{}
}

// Code below was generated by components. DO NOT EDIT.
// Component version: v0.1.0
type mocks struct {
	computedField int
	internalField int
	subComponent  *subcomponent_mocks.SubComponent
}

func convert(p maincomponent.Params) *mocks {
	computedField := 2 * p.InternalField
	return &mocks{
		computedField: computedField,
		internalField: p.InternalField,
		subComponent:  p.SubComponent.(*subcomponent_mocks.SubComponent),
	}
}

func buildMocks(t *testing.T) (maincomponent.MainComponent, *mocks) {
	params := initParams()

	params.SubComponent = subcomponent_mocks.NewSubComponent(t)

	return maincomponent.New(params), convert(params)
}

func mock_subComponent() subcomponent_mocks.SubComponent_ExpecterChain[mocks] {
	return subcomponent_mocks.ExpecterChain(func(m *mocks) *subcomponent_mocks.SubComponent {
		return m.subComponent
	})
}
